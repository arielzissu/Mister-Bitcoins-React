{"version":3,"sources":["cmps/nav-bar.jsx","cmps/contact-preveiw.jsx","cmps/contact-list.jsx","cmps/contact-filter.jsx","services/contact.service.js","pages/contact-page.jsx","services/user.service.js","services/bitcoins.service.js","pages/home-page.jsx","pages/contact-details.jsx","pages/charts.jsx","pages/edit-page.jsx","pages/login-Page.jsx","App.jsx","serviceWorker.js","index.js"],"names":["props","className","activeClassName","exact","to","contact","src","imgUrl","alt","name","contacts","map","_id","key","ContactFilter","state","term","onChangeHandler","ev","target","value","setState","onFilter","filterBy","type","placeholder","onChange","this","Component","_addContact","Promise","resolve","reject","length","txt","possible","i","charAt","Math","floor","random","_makeId","numImg","_setImgUrl","push","getContacts","contactsToReturn","_filter","_sort","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","email","phone","toLocaleLowerCase","filter","includes","arr","sort","a","b","ContactPage","loadContacts","contactService","onFilterHandler","prevState","gUser","JSON","parse","localStorage","getItem","coins","moves","toId","at","Date","now","amount","getUser","addUser","setItem","stringify","price","axios","rate","data","console","log","getRateBTC","getCharts","HomePage","user","BTC","loaduser","userService","bitcoinsService","ContactDetails","onGoBackClickHandler","history","go","onClickEditHandler","match","params","onClick","Charts","values","newValues","coord","x","moment","format","y","unshift","width","height","chartType","loader","options","title","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","EditPage","onSaveHandle","el","preventDefault","handleChange","onDeleteHandle","onSubmit","LoginPage","input","changeHandle","loginHandle","createBrowserHistory","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1166082.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <nav className=\"nav-bar-container\">\r\n      <NavLink activeClassName=\"active\" exact to=\"/\">\r\n        HOME\r\n      </NavLink>\r\n      |<NavLink to=\"/contact\">contacts</NavLink>|\r\n      <NavLink to=\"/charts\">Charts</NavLink>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ contact }) => {\r\n  return (\r\n    <section className=\"contact-prev-container\">\r\n      <img src={contact.imgUrl} alt=\"Profile\" />\r\n      <li className=\"contact-prev-title\">{contact.name}</li>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactPreview from \"./contact-preveiw\";\r\n\r\nexport default (props) => {\r\n  const { contacts } = props;\r\n\r\n  return (\r\n    <section className=\"contact-list-container\">\r\n      <ul className=\"contact-list-contain-prev\">\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <Link\r\n              className=\"contact-list-contain-link-prev\"\r\n              to={\"/contact/\" + contact._id}\r\n              key={contact._id}\r\n            >\r\n              <ContactPreview\r\n                contact={contact}\r\n                key={contact._id}\r\n              ></ContactPreview>\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ContactFilter extends Component {\r\n  state = {\r\n    term: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...props.filterBy };\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({ [name]: value }, () => {\r\n      this.props.onFilter({ ...this.state });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Contact-filter-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Contact Name\"\r\n          onChange={this.onChangeHandler}\r\n          name=\"term\"\r\n          value={this.state.term}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","const contacts = [\r\n    {\r\n      \"_id\": \"5a56640269f443a5d64b32ca\",\r\n      \"name\": \"Ochoa Hyde\",\r\n      \"email\": \"ochoahyde@renovize.com\",\r\n      \"phone\": \"+1 (968) 593-3824\",\r\n      \"imgUrl\": 'https://robohash.org/21'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664025f6ae9aa24a99fde\", \r\n      \"name\": \"Hallie Mclean\",\r\n      \"email\": \"halliemclean@renovize.com\",\r\n      \"phone\": \"+1 (948) 464-2888\",\r\n      \"imgUrl\": 'https://robohash.org/22'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640252d6acddd183d319\", \r\n      \"name\": \"Parsons Norris\",\r\n      \"email\": \"parsonsnorris@renovize.com\",\r\n      \"phone\": \"+1 (958) 502-3495\",\r\n      \"imgUrl\": 'https://robohash.org/23'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402ed1cf349f0b47b4d\", \r\n      \"name\": \"Rachel Lowe\",\r\n      \"email\": \"rachellowe@renovize.com\",\r\n      \"phone\": \"+1 (911) 475-2312\",\r\n      \"imgUrl\": 'https://robohash.org/24'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402abce24c6bfe4699d\", \r\n      \"name\": \"Dominique Soto\",\r\n      \"email\": \"dominiquesoto@renovize.com\",\r\n      \"phone\": \"+1 (807) 551-3258\",\r\n      \"imgUrl\": 'https://robohash.org/24'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402a6499c1d4da9220a\", \r\n      \"name\": \"Shana Pope\",\r\n      \"email\": \"shanapope@renovize.com\",\r\n      \"phone\": \"+1 (970) 527-3082\",\r\n      \"imgUrl\": 'https://robohash.org/25'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402f90ae30e97f990db\", \r\n      \"name\": \"Faulkner Flores\",\r\n      \"email\": \"faulknerflores@renovize.com\",\r\n      \"phone\": \"+1 (952) 501-2678\",\r\n      \"imgUrl\": 'https://robohash.org/26'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664027bae84ef280ffbdf\", \r\n      \"name\": \"Holder Bean\",\r\n      \"email\": \"holderbean@renovize.com\",\r\n      \"phone\": \"+1 (989) 503-2663\",\r\n      \"imgUrl\": 'https://robohash.org/27'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402e3b846c5f6aec652\", \r\n      \"name\": \"Rosanne Shelton\",\r\n      \"email\": \"rosanneshelton@renovize.com\",\r\n      \"phone\": \"+1 (968) 454-3851\",\r\n      \"imgUrl\": 'https://robohash.org/28'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640272c7dcdf59c3d411\", \r\n      \"name\": \"Pamela Nolan\",\r\n      \"email\": \"pamelanolan@renovize.com\",\r\n      \"phone\": \"+1 (986) 545-2166\",\r\n      \"imgUrl\": 'https://robohash.org/29'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664029a8dd82a6178b15f\", \r\n      \"name\": \"Roy Cantu\",\r\n      \"email\": \"roycantu@renovize.com\",\r\n      \"phone\": \"+1 (929) 571-2295\",\r\n      \"imgUrl\": 'https://robohash.org/30'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664028c096d08eeb13a8a\", \r\n      \"name\": \"Ollie Christian\",\r\n      \"email\": \"olliechristian@renovize.com\",\r\n      \"phone\": \"+1 (977) 419-3550\",\r\n      \"imgUrl\": 'https://robohash.org/31'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664026c53582bb9ebe9d1\", \r\n      \"name\": \"Nguyen Walls\",\r\n      \"email\": \"nguyenwalls@renovize.com\",\r\n      \"phone\": \"+1 (963) 471-3181\",\r\n      \"imgUrl\": 'https://robohash.org/32'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640298ab77236845b82b\",\r\n      \"name\": \"Glenna Santana\",\r\n      \"email\": \"glennasantana@renovize.com\",\r\n      \"phone\": \"+1 (860) 467-2376\",\r\n      \"imgUrl\": 'https://robohash.org/33'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640208fba3e8ecb97305\", \r\n      \"name\": \"Malone Clark\",\r\n      \"email\": \"maloneclark@renovize.com\",\r\n      \"phone\": \"+1 (818) 565-2557\",\r\n      \"imgUrl\": 'https://robohash.org/34'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402abb3146207bc4ec5\", \r\n      \"name\": \"Floyd Rutledge\",\r\n      \"email\": \"floydrutledge@renovize.com\",\r\n      \"phone\": \"+1 (807) 597-3629\",\r\n      \"imgUrl\": 'https://robohash.org/35'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640298500fead8cb1ee5\", \r\n      \"name\": \"Grace James\",\r\n      \"email\": \"gracejames@renovize.com\",\r\n      \"phone\": \"+1 (959) 525-2529\",\r\n      \"imgUrl\": 'https://robohash.org/36'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640243427b8f8445231e\", \r\n      \"name\": \"Tanner Gates\",\r\n      \"email\": \"tannergates@renovize.com\",\r\n      \"phone\": \"+1 (978) 591-2291\",\r\n      \"imgUrl\": 'https://robohash.org/37'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664025c3abdad6f5e098c\", \r\n      \"name\": \"Lilly Conner\",\r\n      \"email\": \"lillyconner@renovize.com\",\r\n      \"phone\": \"+1 (842) 587-3812\",\r\n      \"imgUrl\": 'https://robohash.org/38'\r\n    }\r\n  ];\r\n\r\nfunction getContacts (filterBy = null) {\r\n  return new Promise((resolve, reject) => { \r\n    var contactsToReturn = contacts;\r\n    if (filterBy && filterBy.term) {\r\n      contactsToReturn = _filter(filterBy.term);\r\n    }\r\n    resolve(_sort(contactsToReturn));\r\n  })\r\n}\r\n\r\nfunction getContactById (id) {\r\n    return new Promise((resolve, reject) => {\r\n      const contact = contacts.find( contact => contact._id === id);\r\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( contact => contact._id === id);\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1);\r\n    }\r\n    resolve(contacts);\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( c => contact._id === c._id);\r\n    if (index !== -1) {\r\n      contacts[index] = contact;\r\n    }\r\n    resolve(contact);\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    contact._id = _makeId();\r\n    contact.imgUrl = _setImgUrl();\r\n    contacts.push(contact);\r\n    resolve(contact);\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  var txt = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\n\r\nfunction _filter (term) {\r\n  term = term.toLocaleLowerCase();\r\n  return contacts.filter( contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction _sort(arr) {\r\n  return arr.sort( (a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction _setImgUrl(){\r\n  let numImg = 38;\r\n  let imgUrl = `https://robohash.org/${numImg}`;\r\n  numImg++;\r\n  return imgUrl;\r\n}","import React, { Component } from \"react\";\r\nimport ContactList from \"../cmps/contact-list\";\r\nimport ContactFilter from \"../cmps/contact-filter\";\r\nimport contactService from \"../services/contact.service\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class ContactPage extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filterBy: {\r\n      term: \"\",\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.loadContacts();\r\n  }\r\n\r\n  loadContacts = async () => {\r\n    const contacts = await contactService.getContacts(this.state.filterBy);\r\n    this.setState({ contacts });\r\n  };\r\n\r\n  onFilterHandler = (filterBy) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filterBy: {\r\n          ...prevState.filterBy,\r\n          ...filterBy,\r\n        },\r\n      };\r\n    }, this.loadContacts);\r\n  };\r\n\r\n  // addHandle = (el) => {\r\n  //   el.histoty.push(\"/edit\");\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"contact-page-container\">\r\n        <h2 className=\"contact-page-title\">Contact Page:</h2>\r\n        <ContactFilter\r\n          filterBy={this.state.filterBy}\r\n          onFilter={this.onFilterHandler}\r\n        />\r\n        <ContactList contacts={this.state.contacts} />\r\n        <NavLink to=\"/edit\">\r\n          <div className=\"contact-page-add-btn btn\">+</div>\r\n        </NavLink>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","const USER_KEY = 'USER';\r\n\r\nvar gUser = JSON.parse(localStorage.getItem(USER_KEY));\r\nif(!gUser){\r\n    gUser = {\r\n        name: '',\r\n        coins: 0,\r\n        moves:[{toId: '', to: \"\", at: Date.now(), amount: 1}]\r\n    } \r\n}\r\n\r\nfunction getUser() {\r\n    return new Promise((resolve, reject) => { \r\n        resolve(gUser);\r\n        gUser ? resolve(gUser) : reject('user not found!');\r\n    })\r\n}\r\n\r\nfunction addUser(name){\r\n    const newUser = {\r\n      name,\r\n      coins: 100,\r\n      moves:[ ]\r\n    };\r\n    gUser = newUser;\r\n    localStorage.setItem(USER_KEY, JSON.stringify(gUser))\r\n  }\r\n\r\nexport default {\r\n    getUser,\r\n    addUser\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nconst RATE_KEY = 'RATE';\r\n\r\nasync function getRateBTC(price) {\r\n    const rate = await axios(`https://blockchain.info/tobtc?currency=USD&value=${price}`);\r\n    return rate.data;\r\n}\r\n\r\nasync function getCharts() {\r\n    let rate = localStorage.getItem(RATE_KEY)\r\n    if (!rate){\r\n        console.log('data mining...');\r\n        const rate = await axios(`https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true`);\r\n        localStorage.setItem(RATE_KEY, JSON.stringify(rate.data))\r\n        return rate.data;\r\n    }\r\n    rate = JSON.parse(rate)\r\n    return rate;\r\n}\r\n\r\nexport default {\r\n    getRateBTC,\r\n    getCharts\r\n}\r\n","import React, { Component } from \"react\";\r\nimport userService from \"../services/user.service\";\r\nimport bitcoinsService from \"../services/bitcoins.service\";\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    user: null,\r\n    BTC: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.loaduser();\r\n  }\r\n\r\n  loaduser = async () => {\r\n    const user = await userService.getUser();\r\n    this.setState({ user });\r\n    const BTC = await bitcoinsService.getRateBTC(this.state.user.coins);\r\n    this.setState({ BTC });\r\n  };\r\n\r\n  render() {\r\n    const { user, BTC } = this.state;\r\n    return (\r\n      <section className=\"home-page-container\">\r\n        <h1 className=\"home-page-title\">Mister Bitcoins</h1>\r\n        <div className=\"home-page-name\">\r\n          {user ? `Hello ${user.name}!` : \"loading...\"}\r\n        </div>\r\n        <div>\r\n          {user ? (\r\n            <div className=\"home-page-coins\">\r\n              <img src=\"./assets/svg/coin.svg\" alt=\"Coin\" />\r\n              <span>Coins:</span>\r\n              {user.coins}$\r\n            </div>\r\n          ) : (\r\n            \"loading...\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          {BTC ? (\r\n            <div className=\"home-page-BTC\">\r\n              <img src=\"./assets/svg/bitcoin.svg\" alt=\"Coin\" />\r\n              <span>BTC:</span>\r\n              {BTC}\r\n            </div>\r\n          ) : (\r\n            \"loading...\"\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport contactService from \"../services/contact.service\";\r\n\r\nexport default class ContactDetails extends Component {\r\n  state = {\r\n    contact: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const contact = await contactService.getContactById(id);\r\n    this.setState({ contact });\r\n  }\r\n\r\n  onGoBackClickHandler = (ev) => {\r\n    this.props.history.go(-1);\r\n  };\r\n\r\n  onClickEditHandler = () => {\r\n    this.props.history.push(\"/edit/\" + this.state.contact._id);\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n\r\n    return (\r\n      <section className=\"contact-details-container\">\r\n        <div className=\"contact-details-main-imgs\">\r\n          <img\r\n            className=\"contact-details-img btn\"\r\n            src=\"../assets/svg/back.svg\"\r\n            onClick={this.onGoBackClickHandler}\r\n            alt=\"Go Back\"\r\n          />\r\n          <img\r\n            className=\"contact-details-img btn\"\r\n            src=\"../assets/svg/pencil.svg\"\r\n            onClick={this.onClickEditHandler}\r\n            alt=\"Edit Contact\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"contact-details-container-main\">\r\n          <h2>Details Page</h2>\r\n          <img src={contact ? contact.imgUrl : null} alt=\"Profile\" />\r\n          <h3> {contact ? contact.name : \"loading...\"}</h3>\r\n          <h3> {contact ? contact.email : \"loading...\"}</h3>\r\n          <h3> {contact ? contact.phone : \"loading...\"}</h3>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport bitcoinsService from \"../services/bitcoins.service\";\r\nimport * as moment from \"moment\";\r\n\r\nexport default class Charts extends Component {\r\n  state = {\r\n    values: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { values } = await bitcoinsService.getCharts();\r\n    const newValues = values.map((coord) => {\r\n      coord.x = moment(coord.x * 1000).format(\"YYYY-MM-DD\");\r\n      return (coord = [coord.x, coord.y]);\r\n    });\r\n    newValues.unshift([\"Date\", \"USD\"]);\r\n    this.setState({ values: newValues });\r\n  }\r\n\r\n  render() {\r\n    const { values } = this.state;\r\n    return (\r\n      <section className=\"chart-page-container\">\r\n        <h2 className=\"chart-page-title\">\r\n          Average USD market price across major bitcoin exchanges\r\n        </h2>\r\n        <Chart\r\n          width={\"500px\"}\r\n          height={\"300px\"}\r\n          chartType=\"AreaChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={\r\n            values\r\n              ? values\r\n              : [\r\n                  [\"Date\", \"USD\"],\r\n                  [\"2019-11-03\", 7286.36],\r\n                  [\"2019-11-13\", 6886.25],\r\n                  [\"2019-11-23\", 7486.15],\r\n                  [\"2019-12-03\", 6686.33],\r\n                ]\r\n          }\r\n          options={{\r\n            title: \"Company Performance\",\r\n            hAxis: { title: \"Year\", titleTextStyle: { color: \"#333\" } },\r\n            vAxis: { minValue: 0 },\r\n            chartArea: { width: \"50%\", height: \"70%\" },\r\n          }}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport contactService from \"../services/contact.service\";\r\n\r\nexport default class EditPage extends Component {\r\n  state = {\r\n    contact: {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    if (id) {\r\n      const contact = await contactService.getContactById(id);\r\n      this.setState({ contact });\r\n    }\r\n  }\r\n\r\n  onSaveHandle = (el) => {\r\n    el.preventDefault();\r\n    contactService.saveContact(this.state.contact);\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    const { name, value } = ev.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        contact: {\r\n          ...prevState.contact,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  onGoBackClickHandler = (ev) => {\r\n    this.props.history.go(-1);\r\n  };\r\n\r\n  onDeleteHandle = (ev) => {\r\n    contactService.deleteContact(this.state.contact._id);\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n    return (\r\n      <section>\r\n        <div className=\"edit-page-main-imgs\">\r\n          <img\r\n            className=\"edit-page-img btn\"\r\n            src=\"../assets/svg/back.svg\"\r\n            onClick={this.onGoBackClickHandler}\r\n            alt=\"Go Back\"\r\n          />\r\n          {contact._id ? (\r\n            <img\r\n              className=\"edit-page-img btn\"\r\n              src=\"../assets/svg/delete.svg\"\r\n              onClick={this.onDeleteHandle}\r\n              alt=\"Delete Contact\"\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        {contact._id ? (\r\n          <section className=\"edit-page-container\">\r\n            <h2>Edit Page</h2>\r\n            <form onSubmit={this.onSaveHandle} className=\"edit-page-form-main\">\r\n              <label>Enter a contact name: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter email: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.email}\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter phone number: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.phone}\r\n                name=\"phone\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button>Save</button>\r\n            </form>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {!contact._id ? (\r\n          <section className=\"edit-page-container\">\r\n            <h2>Add Page</h2>\r\n            <form onSubmit={this.onSaveHandle} className=\"edit-page-form-main\">\r\n              <label>Enter a contact name: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter email: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.email}\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter phone number: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.phone}\r\n                name=\"phone\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button>Save</button>\r\n            </form>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport userService from \"../services/user.service\";\r\n\r\nexport default class LoginPage extends Component {\r\n  state = {\r\n    input: null,\r\n  };\r\n\r\n  changeHandle = (el) => {\r\n    this.setState({ input: el.target.value });\r\n  };\r\n\r\n  loginHandle = () => {\r\n    userService.addUser(this.state.input);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"login-page-container\">\r\n        <img src=\"./assets/svg/coin1.svg\" alt=\"Welcome home!\" />\r\n        <h2>Please enter your name:</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          onChange={this.changeHandle}\r\n        />\r\n        <div className=\"login-page-btn btn\" onClick={this.loginHandle}>\r\n          Login\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  // Redirect,\n} from \"react-router-dom\";\n\nimport \"./App\";\nimport NavBar from \"./cmps/nav-bar\";\nimport ContactPage from \"./pages/contact-page\";\nimport HomePage from \"./pages/home-page\";\nimport ContactDetails from \"./pages/contact-details\";\nimport Charts from \"./pages/charts\";\nimport EditPage from \"./pages/edit-page\";\nimport LoginPage from \"./pages/login-Page\";\n// import userService from \"./services/user.service\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <section>\n      <Router history={history}>\n        <NavBar />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/contact/:id\" component={ContactDetails} />\n            <Route path=\"/contact\" component={ContactPage} />\n            <Route path=\"/edit/:id?\" component={EditPage} />\n            <Route path=\"/charts\" component={Charts} />\n            <Route path=\"/login\" component={LoginPage} />\n            {/* <PrivateRoute path=\"/charts\" component={Charts} /> */}\n            {/* <PrivateRoute path=\"/charts\">\n              <Charts />\n            </PrivateRoute> */}\n          </Switch>\n        </main>\n      </Router>\n    </section>\n  );\n}\n\n// function PrivateRoute({ children, ...rest }) {\n//   checkUser();\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         checkUser() ? (\n//           children\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: location },\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n\n// async function checkUser() {\n//   const user = await userService.getUser();\n//   if (user.name) {\n//     console.log(\"true\", user.name);\n//     return true;\n//   } else {\n//     console.log(\"false\", user.name);\n//     return false;\n//   }\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}