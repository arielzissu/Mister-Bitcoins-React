{"version":3,"sources":["cmps/PrivateRoute.jsx","cmps/nav-bar.jsx","cmps/footer.jsx","services/contact.service.js","store/actions/contactActions.js","cmps/contact-preveiw.jsx","cmps/contact-list.jsx","cmps/contact-filter.jsx","pages/contact-page.jsx","services/user.service.js","store/actions/UserActions.js","services/bitcoins.service.js","pages/home-page.jsx","cmps/transfer-fund.jsx","pages/contact-details.jsx","pages/charts.jsx","pages/edit-page.jsx","pages/login-Page.jsx","App.jsx","serviceWorker.js","store/reducers/ContactReducer.js","store/reducers/UserReducer.js","store/index.js","index.js"],"names":["connect","state","loggedinUser","user","Component","component","rest","console","log","render","props","to","className","activeClassName","exact","contacts","_addContact","contact","Promise","resolve","reject","_id","length","txt","possible","i","charAt","Math","floor","random","_makeId","imgUrl","numImg","_setImgUrl","push","getContacts","filterBy","contactsToReturn","term","_filter","_sort","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","name","email","phone","toLocaleLowerCase","filter","includes","arr","sort","a","b","loadContact","contactId","dispatch","ContactService","type","ContactPreview","src","alt","ContactList","map","key","ContactFilter","onChangeHandler","ev","target","value","setState","onFilter","placeholder","onChange","this","ContactPage","loadContacts","onFilterHandler","prevState","mapDispatchToProps","gUser","JSON","parse","localStorage","getItem","getUser","stringify","addUser","coins","moves","setItem","loadUser","UserService","price","axios","rate","data","getRateBTC","getCharts","HomePage","BTC","loaduser","bitcoinsService","TransferFund","amount","changeHandle","onTransfer","onClick","ContactDetails","onGoBackClickHandler","history","go","onClickEditHandler","match","params","currContact","Charts","values","newValues","coord","x","moment","format","y","unshift","width","height","chartType","loader","options","title","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","EditPage","onSaveHandle","el","preventDefault","handleChange","onDeleteHandle","prevProps","clearContact","onSubmit","isUpdate","LoginPage","username","loginHandle","signup","createBrowserHistory","path","from","Boolean","window","location","hostname","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.817c6f94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ loggedinUser, component: Component, ...rest }) => {\r\n  console.log(\"loggedinUser: \", loggedinUser);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedinUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedinUser: state.user.loggedinUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <nav className=\"nav-bar-container\">\r\n      <NavLink activeClassName=\"active\" exact to=\"/\">\r\n        HOME\r\n      </NavLink>\r\n      |<NavLink to=\"/contact\">contacts</NavLink>|\r\n      <NavLink to=\"/charts\">Charts</NavLink>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <section className=\"footer-container\">\r\n      <h2>\r\n        &copy; 2020 <span className=\"footer-span1\">Mister Bitcoins</span> - All\r\n        Rights Reserved <span className=\"footer-span2\">, Ariel Zissu</span>\r\n      </h2>\r\n    </section>\r\n  );\r\n};\r\n","const contacts = [\r\n    {\r\n      \"_id\": \"5a56640269f443a5d64b32ca\",\r\n      \"name\": \"Ochoa Hyde\",\r\n      \"email\": \"ochoahyde@renovize.com\",\r\n      \"phone\": \"+1 (968) 593-3824\",\r\n      \"imgUrl\": 'https://robohash.org/21'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664025f6ae9aa24a99fde\", \r\n      \"name\": \"Hallie Mclean\",\r\n      \"email\": \"halliemclean@renovize.com\",\r\n      \"phone\": \"+1 (948) 464-2888\",\r\n      \"imgUrl\": 'https://robohash.org/22'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640252d6acddd183d319\", \r\n      \"name\": \"Parsons Norris\",\r\n      \"email\": \"parsonsnorris@renovize.com\",\r\n      \"phone\": \"+1 (958) 502-3495\",\r\n      \"imgUrl\": 'https://robohash.org/23'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402ed1cf349f0b47b4d\", \r\n      \"name\": \"Rachel Lowe\",\r\n      \"email\": \"rachellowe@renovize.com\",\r\n      \"phone\": \"+1 (911) 475-2312\",\r\n      \"imgUrl\": 'https://robohash.org/24'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402abce24c6bfe4699d\", \r\n      \"name\": \"Dominique Soto\",\r\n      \"email\": \"dominiquesoto@renovize.com\",\r\n      \"phone\": \"+1 (807) 551-3258\",\r\n      \"imgUrl\": 'https://robohash.org/24'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402a6499c1d4da9220a\", \r\n      \"name\": \"Shana Pope\",\r\n      \"email\": \"shanapope@renovize.com\",\r\n      \"phone\": \"+1 (970) 527-3082\",\r\n      \"imgUrl\": 'https://robohash.org/25'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402f90ae30e97f990db\", \r\n      \"name\": \"Faulkner Flores\",\r\n      \"email\": \"faulknerflores@renovize.com\",\r\n      \"phone\": \"+1 (952) 501-2678\",\r\n      \"imgUrl\": 'https://robohash.org/26'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664027bae84ef280ffbdf\", \r\n      \"name\": \"Holder Bean\",\r\n      \"email\": \"holderbean@renovize.com\",\r\n      \"phone\": \"+1 (989) 503-2663\",\r\n      \"imgUrl\": 'https://robohash.org/27'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402e3b846c5f6aec652\", \r\n      \"name\": \"Rosanne Shelton\",\r\n      \"email\": \"rosanneshelton@renovize.com\",\r\n      \"phone\": \"+1 (968) 454-3851\",\r\n      \"imgUrl\": 'https://robohash.org/28'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640272c7dcdf59c3d411\", \r\n      \"name\": \"Pamela Nolan\",\r\n      \"email\": \"pamelanolan@renovize.com\",\r\n      \"phone\": \"+1 (986) 545-2166\",\r\n      \"imgUrl\": 'https://robohash.org/29'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664029a8dd82a6178b15f\", \r\n      \"name\": \"Roy Cantu\",\r\n      \"email\": \"roycantu@renovize.com\",\r\n      \"phone\": \"+1 (929) 571-2295\",\r\n      \"imgUrl\": 'https://robohash.org/30'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664028c096d08eeb13a8a\", \r\n      \"name\": \"Ollie Christian\",\r\n      \"email\": \"olliechristian@renovize.com\",\r\n      \"phone\": \"+1 (977) 419-3550\",\r\n      \"imgUrl\": 'https://robohash.org/31'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664026c53582bb9ebe9d1\", \r\n      \"name\": \"Nguyen Walls\",\r\n      \"email\": \"nguyenwalls@renovize.com\",\r\n      \"phone\": \"+1 (963) 471-3181\",\r\n      \"imgUrl\": 'https://robohash.org/32'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640298ab77236845b82b\",\r\n      \"name\": \"Glenna Santana\",\r\n      \"email\": \"glennasantana@renovize.com\",\r\n      \"phone\": \"+1 (860) 467-2376\",\r\n      \"imgUrl\": 'https://robohash.org/33'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640208fba3e8ecb97305\", \r\n      \"name\": \"Malone Clark\",\r\n      \"email\": \"maloneclark@renovize.com\",\r\n      \"phone\": \"+1 (818) 565-2557\",\r\n      \"imgUrl\": 'https://robohash.org/34'\r\n    },\r\n    {\r\n      \"_id\": \"5a566402abb3146207bc4ec5\", \r\n      \"name\": \"Floyd Rutledge\",\r\n      \"email\": \"floydrutledge@renovize.com\",\r\n      \"phone\": \"+1 (807) 597-3629\",\r\n      \"imgUrl\": 'https://robohash.org/35'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640298500fead8cb1ee5\", \r\n      \"name\": \"Grace James\",\r\n      \"email\": \"gracejames@renovize.com\",\r\n      \"phone\": \"+1 (959) 525-2529\",\r\n      \"imgUrl\": 'https://robohash.org/36'\r\n    },\r\n    {\r\n      \"_id\": \"5a56640243427b8f8445231e\", \r\n      \"name\": \"Tanner Gates\",\r\n      \"email\": \"tannergates@renovize.com\",\r\n      \"phone\": \"+1 (978) 591-2291\",\r\n      \"imgUrl\": 'https://robohash.org/37'\r\n    },\r\n    {\r\n      \"_id\": \"5a5664025c3abdad6f5e098c\", \r\n      \"name\": \"Lilly Conner\",\r\n      \"email\": \"lillyconner@renovize.com\",\r\n      \"phone\": \"+1 (842) 587-3812\",\r\n      \"imgUrl\": 'https://robohash.org/38'\r\n    }\r\n  ];\r\n\r\nfunction getContacts (filterBy = null) {\r\n  return new Promise((resolve, reject) => { \r\n    var contactsToReturn = contacts;\r\n    if (filterBy && filterBy.term) {\r\n      contactsToReturn = _filter(filterBy.term);\r\n    }\r\n    resolve(_sort(contactsToReturn));\r\n  })\r\n}\r\n\r\nfunction getContactById (id) {\r\n    return new Promise((resolve, reject) => {\r\n      const contact = contacts.find( contact => contact._id === id);\r\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( contact => contact._id === id);\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1);\r\n    }\r\n    resolve(contacts);\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( c => contact._id === c._id);\r\n    if (index !== -1) {\r\n      contacts[index] = contact;\r\n    }\r\n    resolve(contact);\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    contact._id = _makeId();\r\n    contact.imgUrl = _setImgUrl();\r\n    contacts.push(contact);\r\n    resolve(contact);\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  var txt = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return txt;\r\n}\r\n\r\nfunction _filter (term) {\r\n  term = term.toLocaleLowerCase();\r\n  return contacts.filter( contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction _sort(arr) {\r\n  return arr.sort( (a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction _setImgUrl(){\r\n  let numImg = 38;\r\n  let imgUrl = `https://robohash.org/${numImg}`;\r\n  numImg++;\r\n  return imgUrl;\r\n}","import ContactService from '../../services/contact.service';\r\n\r\nexport function loadContacts(filterBy) {\r\n    return async dispatch => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        dispatch({ type: 'SET_CONTACTS', contacts });\r\n    }\r\n}\r\n\r\nexport function loadContact(contactId) {\r\n    return async dispatch => {\r\n        if (contactId) {\r\n            const contact = await ContactService.getContactById(contactId);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact });\r\n        } else {\r\n            const contact = ContactService.getEmptyContact();\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact });\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearContact() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_CURR_CONTACT', contact: null });\r\n    }\r\n}\r\n\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isUpdate = !!contact._id;\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isUpdate) dispatch({ type: 'UPDATE_CONTACT', contact });\r\n        else dispatch({ type: 'ADD_CONTACT', contact });\r\n        return contact;\r\n    }\r\n}\r\n\r\nexport function deleteContact(contactId) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(contactId);\r\n        dispatch({ type: 'DELETE_CONTACT', contactId })\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport function ContactPreview(props) {\r\n  const { contact } = props;\r\n  return (\r\n    <section className=\"contact-prev-container\">\r\n      <img src={contact.imgUrl} alt=\"Profile\" />\r\n      <li className=\"contact-prev-title\">{contact.name}</li>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactPreview;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactPreview from \"./contact-preveiw\";\r\n\r\nexport function ContactList(props) {\r\n  const { contacts } = props;\r\n\r\n  return (\r\n    <section className=\"contact-list-container\">\r\n      <ul className=\"contact-list-contain-prev\">\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <Link\r\n              className=\"contact-list-contain-link-prev\"\r\n              to={\"/contact/\" + contact._id}\r\n              key={contact._id}\r\n            >\r\n              <ContactPreview\r\n                contact={contact}\r\n                key={contact._id}\r\n              ></ContactPreview>\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ContactFilter extends Component {\r\n  state = {\r\n    term: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...props.filterBy };\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({ [name]: value }, () => {\r\n      this.props.onFilter({ ...this.state });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Contact-filter-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Contact Name\"\r\n          onChange={this.onChangeHandler}\r\n          name=\"term\"\r\n          value={this.state.term}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadContacts } from \"../store/actions/contactActions\";\r\n\r\nimport ContactList from \"../cmps/contact-list\";\r\nimport ContactFilter from \"../cmps/contact-filter\";\r\n\r\nexport class ContactPage extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filterBy: { term: \"\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadContacts();\r\n  }\r\n\r\n  loadContacts = () => {\r\n    this.props.loadContacts(this.state.filterBy);\r\n  };\r\n\r\n  onFilterHandler = (filterBy) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filterBy: {\r\n          ...prevState.filterBy,\r\n          ...filterBy,\r\n        },\r\n      };\r\n    }, this.loadContacts);\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    const { filterBy } = this.state;\r\n    return (\r\n      <section className=\"contact-page-container\">\r\n        <h2 className=\"contact-page-title\">Contact Page:</h2>\r\n        <ContactFilter filterBy={filterBy} onFilter={this.onFilterHandler} />\r\n        <ContactList contacts={contacts} />\r\n        <NavLink to=\"/edit\">\r\n          <div className=\"contact-page-add-btn btn\">+</div>\r\n        </NavLink>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);\r\n","const USER_KEY = 'USER';\r\n\r\nvar gUser = JSON.parse(localStorage.getItem(USER_KEY));\r\n\r\nfunction getUser() {\r\n    console.log('gUser in service: ', gUser);\r\n    return JSON.parse(JSON.stringify(gUser));\r\n}\r\n\r\nfunction addUser(name){\r\n    gUser = {\r\n      name,\r\n      coins: 100,\r\n      moves:[]\r\n    };\r\n    localStorage.setItem(USER_KEY, JSON.stringify(gUser))\r\n    return getUser();\r\n  }\r\n\r\nexport default {\r\n    getUser,\r\n    addUser\r\n}\r\n\r\n","import UserService from '../../services/user.service';\r\n\r\nexport function loadUser() {\r\n    return dispatch => {\r\n        const loggedinUser = UserService.getUser();\r\n        console.log('in actions: ', loggedinUser);\r\n        \r\n        dispatch({ type: 'SET_LOGGEDIN_USER', loggedinUser });\r\n    }\r\n}\r\n\r\nexport function signup(name) {\r\n    return dispatch => {\r\n        const loggedinUser = UserService.addUser(name);\r\n        dispatch({ type: 'SET_LOGGEDIN_USER', loggedinUser });\r\n    }\r\n}\r\n\r\n// export function logout() {\r\n//     return dispatch => {\r\n//         UserService.logout();\r\n//         dispatch({ type: 'SET_LOGGEDIN_USER', loggedinUser: null });\r\n//     }\r\n// }\r\n\r\n// export function addMove(contact, amount) {\r\n//     return dispatch => {\r\n//         const loggedinUser = UserService.addMove(contact, amount);\r\n//         dispatch({ type: 'SET_LOGGEDIN_USER', loggedinUser });\r\n//     }\r\n// }","import axios from 'axios'\r\n\r\nconst RATE_KEY = 'RATE';\r\n\r\nasync function getRateBTC(price) {\r\n    const rate = await axios(`https://blockchain.info/tobtc?currency=USD&value=${price}`);\r\n    return rate.data;\r\n}\r\n\r\nasync function getCharts() {\r\n    let rate = localStorage.getItem(RATE_KEY)\r\n    if (!rate){\r\n        console.log('data mining...');\r\n        const rate = await axios(`https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true`);\r\n        localStorage.setItem(RATE_KEY, JSON.stringify(rate.data))\r\n        return rate.data;\r\n    }\r\n    rate = JSON.parse(rate)\r\n    return rate;\r\n}\r\n\r\nexport default {\r\n    getRateBTC,\r\n    getCharts\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadUser } from \"../store/actions/UserActions\";\r\nimport bitcoinsService from \"../services/bitcoins.service\";\r\n\r\n// import MoveList from \"../cmps/move-list\";\r\n\r\nexport class HomePage extends Component {\r\n  state = {\r\n    BTC: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loaduser();\r\n  }\r\n\r\n  loaduser = async () => {\r\n    this.props.loadUser();\r\n    const BTC = await bitcoinsService.getRateBTC(this.props.loggedinUser.coins);\r\n    this.setState({ BTC });\r\n  };\r\n\r\n  render() {\r\n    const user = this.props.loggedinUser;\r\n    const { BTC } = this.state;\r\n    if (!user) return false;\r\n    return (\r\n      <section className=\"home-page-container\">\r\n        <h1 className=\"home-page-title\">Mister Bitcoins</h1>\r\n        <div className=\"home-page-name\">\r\n          {user ? `Hello ${user.name}!` : \"loading...\"}\r\n        </div>\r\n        <div>\r\n          {user ? (\r\n            <div className=\"home-page-coins\">\r\n              <img src=\"./assets/svg/coin.svg\" alt=\"Coin\" />\r\n              <span>Coins:</span>\r\n              {user.coins}$\r\n            </div>\r\n          ) : (\r\n            \"loading...\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          {BTC ? (\r\n            <div className=\"home-page-BTC\">\r\n              <img src=\"./assets/svg/bitcoin.svg\" alt=\"Bitcoin\" />\r\n              <span>BTC:</span>\r\n              {BTC}\r\n            </div>\r\n          ) : (\r\n            \"loading...\"\r\n          )}\r\n        </div>\r\n        {/* <MoveList /> */}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedinUser: state.user.loggedinUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TransferFund extends Component {\r\n  state = {\r\n    amount: null,\r\n  };\r\n\r\n  changeHandle = (ev) => {\r\n    console.log(ev.target.value);\r\n    this.setState({ amount: ev.target.value });\r\n  };\r\n\r\n  onTransfer = (ev) => {};\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    return (\r\n      <section>\r\n        <h2 className=\"transfer-fund-title\">\r\n          Transfer coins to <span>{contact.name}:</span>\r\n        </h2>\r\n        <div className=\"transfer-fund-main\">\r\n          <h3 className=\"transfer-amount\">Amount:</h3>\r\n          <input\r\n            className=\"transfer-fund-input\"\r\n            type=\"number\"\r\n            placeholder=\"(Number)\"\r\n            onChange={this.changeHandle}\r\n          />\r\n          <div onClick={this.onTransfer()} className=\"transfer-fund-btn\">\r\n            Transfer\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadContact } from \"../store/actions/contactActions\";\r\n\r\nimport TransferFund from \"../cmps/transfer-fund\";\r\n\r\nexport class ContactDetails extends Component {\r\n  componentDidMount() {\r\n    this.loadContact();\r\n  }\r\n  async loadContact() {\r\n    const { id } = this.props.match.params;\r\n    try {\r\n      await this.props.loadContact(id);\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.props.history.push(\"/contact\");\r\n    }\r\n  }\r\n\r\n  onGoBackClickHandler = (ev) => {\r\n    this.props.history.go(-1);\r\n  };\r\n\r\n  onClickEditHandler = () => {\r\n    this.props.history.push(\"/edit/\" + this.props.contact._id);\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n\r\n    return (\r\n      <section className=\"contact-details-container\">\r\n        <div className=\"contact-details-main-imgs\">\r\n          <img\r\n            className=\"contact-details-img btn\"\r\n            src=\"../assets/svg/back.svg\"\r\n            onClick={this.onGoBackClickHandler}\r\n            alt=\"Go Back\"\r\n          />\r\n          <img\r\n            className=\"contact-details-img btn\"\r\n            src=\"./assets/svg/pencil.svg\"\r\n            onClick={this.onClickEditHandler}\r\n            alt=\"Edit Contact\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"contact-details-container-main\">\r\n          <h2>Details Page</h2>\r\n          <img src={contact ? contact.imgUrl : null} alt=\"Profile\" />\r\n          <h3> {contact ? contact.name : \"loading...\"}</h3>\r\n          <h3> {contact ? contact.email : \"loading...\"}</h3>\r\n          <h3> {contact ? contact.phone : \"loading...\"}</h3>\r\n        </div>\r\n\r\n        {contact ? <TransferFund contact={contact} /> : \"\"}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: state.contact.currContact,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails);\r\n","import React, { Component } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport bitcoinsService from \"../services/bitcoins.service\";\r\nimport * as moment from \"moment\";\r\n\r\nexport default class Charts extends Component {\r\n  state = {\r\n    values: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { values } = await bitcoinsService.getCharts();\r\n    const newValues = values.map((coord) => {\r\n      coord.x = moment(coord.x * 1000).format(\"YYYY-MM-DD\");\r\n      return (coord = [coord.x, coord.y]);\r\n    });\r\n    newValues.unshift([\"Date\", \"USD\"]);\r\n    this.setState({ values: newValues });\r\n  }\r\n\r\n  render() {\r\n    const { values } = this.state;\r\n    return (\r\n      <section className=\"chart-page-container\">\r\n        <h2 className=\"chart-page-title\">\r\n          Average USD market price across major bitcoin exchanges\r\n        </h2>\r\n        <Chart\r\n          width={\"500px\"}\r\n          height={\"300px\"}\r\n          chartType=\"AreaChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={\r\n            values\r\n              ? values\r\n              : [\r\n                  [\"Date\", \"USD\"],\r\n                  [\"2019-11-03\", 7286.36],\r\n                  [\"2019-11-13\", 6886.25],\r\n                  [\"2019-11-23\", 7486.15],\r\n                  [\"2019-12-03\", 6686.33],\r\n                ]\r\n          }\r\n          options={{\r\n            title: \"Company Performance\",\r\n            hAxis: { title: \"Year\", titleTextStyle: { color: \"#333\" } },\r\n            vAxis: { minValue: 0 },\r\n            chartArea: { width: \"50%\", height: \"70%\" },\r\n          }}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  loadContact,\r\n  clearContact,\r\n  saveContact,\r\n  deleteContact,\r\n} from \"../store/actions/contactActions\";\r\n\r\nexport class EditPage extends Component {\r\n  state = {\r\n    contact: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadContact();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.loadContact();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearContact();\r\n  }\r\n\r\n  async loadContact() {\r\n    const { id } = this.props.match.params;\r\n    try {\r\n      await this.props.loadContact(id);\r\n      const { currContact } = this.props;\r\n      this.setState({ contact: { ...currContact } });\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.props.history.push(\"/contact\");\r\n    }\r\n  }\r\n\r\n  onSaveHandle = (el) => {\r\n    el.preventDefault();\r\n    this.props.saveContact(this.state.contact);\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    const { name, value } = ev.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        contact: {\r\n          ...prevState.contact,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  onGoBackClickHandler = (ev) => {\r\n    this.props.history.go(-1);\r\n  };\r\n\r\n  onDeleteHandle = (ev) => {\r\n    this.props.deleteContact(this.state.contact._id);\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n    if (!contact) return false;\r\n    return (\r\n      <section>\r\n        <div className=\"edit-page-main-imgs\">\r\n          <img\r\n            className=\"edit-page-img btn\"\r\n            src=\"./assets/svg/back.svg\"\r\n            onClick={this.onGoBackClickHandler}\r\n            alt=\"Go Back\"\r\n          />\r\n          {contact._id ? (\r\n            <img\r\n              className=\"edit-page-img btn\"\r\n              src=\"./assets/svg/delete.svg\"\r\n              onClick={this.onDeleteHandle}\r\n              alt=\"Delete Contact\"\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        {contact._id ? (\r\n          <section className=\"edit-page-container\">\r\n            <h2>Edit Page</h2>\r\n            <form onSubmit={this.onSaveHandle} className=\"edit-page-form-main\">\r\n              <label>Enter a contact name: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter email: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.email}\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter phone number: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.phone}\r\n                name=\"phone\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button>Save</button>\r\n            </form>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {!contact._id ? (\r\n          <section className=\"edit-page-container\">\r\n            <h2>Add Page</h2>\r\n            <form onSubmit={this.onSaveHandle} className=\"edit-page-form-main\">\r\n              <label>Enter a contact name: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter email: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.email}\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Enter phone number: </label>\r\n              <input\r\n                type=\"text\"\r\n                value={contact.phone}\r\n                name=\"phone\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button>Save</button>\r\n            </form>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currContact: state.contact.currContact,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadContact,\r\n  clearContact,\r\n  saveContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signup } from \"../store/actions/UserActions\";\r\n\r\nexport class LoginPage extends Component {\r\n  state = {\r\n    username: \"\",\r\n  };\r\n\r\n  changeHandle = (ev) => {\r\n    this.setState({ username: ev.target.value });\r\n  };\r\n\r\n  loginHandle = () => {\r\n    this.props.signup(this.state.username);\r\n    this.setState({ username: \"\" });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    if (this.props.loggedinUser) return <Redirect to=\"/\" />;\r\n    return (\r\n      <section className=\"login-page-container\">\r\n        <img src=\"./assets/svg/coin1.svg\" alt=\"Welcome home!\" />\r\n        <h2>Please enter your name:</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          onChange={this.changeHandle}\r\n        />\r\n        <div className=\"login-page-btn btn\" onClick={this.loginHandle}>\r\n          Login\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedinUser: state.user.loggedinUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  signup,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./App\";\nimport PrivateRoute from \"./cmps/PrivateRoute\";\nimport NavBar from \"./cmps/nav-bar\";\nimport Footer from \"./cmps/footer\";\nimport ContactPage from \"./pages/contact-page\";\nimport HomePage from \"./pages/home-page\";\nimport ContactDetails from \"./pages/contact-details\";\nimport Charts from \"./pages/charts\";\nimport EditPage from \"./pages/edit-page\";\nimport LoginPage from \"./pages/login-Page\";\n\nimport { loadUser } from \"./store/actions/UserActions\";\nimport { connect } from \"react-redux\";\n\nconst history = createBrowserHistory();\n\nfunction App({ loadUser }) {\n  loadUser();\n  return (\n    <section>\n      <Router history={history}>\n        <NavBar />\n        <main>\n          <Switch>\n            <PrivateRoute path=\"/\" exact component={HomePage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <PrivateRoute path=\"/contact/:id\" component={ContactDetails} />\n            <PrivateRoute path=\"/contact\" exact component={ContactPage} />\n            <PrivateRoute path=\"/edit/:id?\" component={EditPage} />\n            <PrivateRoute path=\"/charts\" component={Charts} />\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </main>\n      </Router>\n      <Footer />\n    </section>\n  );\n}\n\nconst mapDispatchToProps = {\n  loadUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return { ...state, contacts: action.contacts };\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact };\r\n        case 'ADD_CONTACT':\r\n            return { ...state, contacts: [...state.contacts, action.contact] };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return (contact._id === action.contact._id) ? action.contact : contact;\r\n                })\r\n            };\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contactId)\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_LOGGEDIN_USER':\r\n            return { ...state, loggedinUser: action.loggedinUser };\r\n        default:\r\n            return state;\r\n    };\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport UserReducer from './reducers/UserReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    contact: ContactReducer,\r\n    user: UserReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}> \n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}